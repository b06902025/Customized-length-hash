it's a simple hash function design.

setting
	L = flexible
	K = flexible
	rootkey(256 int)
	a matrix(4x4)
input
	
	string(with memory limit, up to 131073 byte)

output
	hashstring(K byte)

idea:
1.	add root key into original string every 256 characters -> stringA ( like salting )
2.	running through the whole stringA to decide a number R. (0 <= R <= 1000007)
3.	get K effective strings with length L from stringA by running rolling function that gives pseudo-random number depending on R, K, marked as stringB_0~K-1.
	get S by rolling function.
4.	repeat K times:
		the i times:
		choose stringB_S multiple with transmatrix 4X4 X L/4 times
		add this stringB_S into the i place in output

overall time efficiency:
1.	add key = O(n)
2.	get R = O(n)
3.	get stringB = O(KL)
4.	get outputstring = O(KL)

O(n+KL)
